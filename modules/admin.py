from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message, ChatType
from aiogram.dispatcher.filters import IDFilter

from modules.config import dp, USER_ID, bot
from modules.database import is_registered, update_user_role, delete_user, register_user, is_admin

async def get_username(telegram_id):
    try:
        chat = await bot.get_chat(telegram_id)
        if chat.type == ChatType.PRIVATE:
            return chat.username
        else:
            return None
    except Exception:
        return None

@dp.message_handler(IDFilter(USER_ID), commands=['register'])
async def register(message: Message):
    args = message.get_args().split()
    if len(args) == 2:
        try:
            telegram_id = int(args[0])
            is_admin = bool(args[1])
            if is_registered(telegram_id):
                await message.reply('A user with such a telegram_id already exists')
            else:
                register_user(telegram_id, is_admin)
                await message.reply('The user has been successfully registered')
        except ValueError:
            await message.reply('Invalid telegram_id or is_admin format')
    else:
        await message.reply('Invalid number of arguments')

@dp.message_handler(IDFilter(USER_ID), commands=['user_menu'])
async def user_menu(message: Message):
    args = message.get_args().split()
    if len(args) == 1:
        try:
            telegram_id = int(args[0])
            if is_registered(telegram_id):
                is_adm = is_admin(telegram_id)
                username = get_username(telegram_id)
                
                keyboard = InlineKeyboardMarkup(row_width=2)
                admin_button = InlineKeyboardButton(f'Change privileges to {not is_admin}', callback_data=f'change_privileges {telegram_id} {not is_adm}')
                delete_button = InlineKeyboardButton('Delete user', callback_data=f'delete_user {telegram_id}')
                keyboard.add(admin_button, delete_button)
                
                symb = '✅' if is_adm else '❌'
                await message.reply(f'User\'s {username} with id {telegram_id} menu:\nIs admin: {is_admin} {symb}', reply_markup=keyboard)
            else:
                await message.reply('There is no user with such a telegram_id')
        except ValueError:
            await message.reply('Invalid telegram_id format')
    else:
        await message.reply('Invalid number of arguments')

@dp.message_handler(IDFilter(USER_ID), commands=['change_privileges'])
async def edit_admin(message: Message):
    args = message.get_args().split()
    telegram_id = int(args[0])
    is_admin = bool(args[1])
    if is_registered(telegram_id):
        update_user_role(telegram_id, is_admin)
        await message.reply('The user\'s privileges has been successfully updated')
    else:
        await message.reply('There is no user with such a telegram_id')

@dp.message_handler(IDFilter(USER_ID), commands=['delete_user'])
async def delete_user_command(message: Message):
    args = message.get_args().split()
    telegram_id = int(args[0])
    if telegram_id == USER_ID:
        await message.reply('You cannot delete yourself')
    else:
        if is_registered(telegram_id):
            delete_user(telegram_id)
            await message.reply('The user has been successfully deleted')
        else:
            await message.reply('There is no user with such a telegram_id')

